/*
 * This Scala Testsuite was generated by the Gradle 'init' task.
 */
package fp.scala

import org.scalatest.funsuite.AnyFunSuite
import org.junit.runner.RunWith
import org.scalatestplus.junit.JUnitRunner

@RunWith(classOf[JUnitRunner])
class WrapperTest extends AnyFunSuite {

  test("wrap class work with for-yield expression") {

    val expected = Wrapper(1).flatMap{ w1 =>
      Wrapper(2).flatMap{ w2 =>
        Wrapper(3).map{w3 =>
          w1 + w2 + w3
        }
      }
    }

    val result = for {
      w1 <- Wrapper(1)
      w2 <- Wrapper(2)
      w3 <- Wrapper(3)
    } yield w1 + w2 + w3

    //Note: Map is the last function executed (base case)
    // a for yield expression is like a many recursive flatMap calls (recursive case)

    assert(result.elem() == 6)
    assert(result.elem() == expected.elem())
  }
}
